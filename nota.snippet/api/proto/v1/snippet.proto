syntax = "proto3";

package snippet.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

option go_package = "nota.snippet/pkg/pb/v1;snippetpb";

service SnippetService {
  rpc CreateSnippet(CreateSnippetRequest) returns (CreateSnippetResponse) {
    option (google.api.http) = {
      post: "/api/v1/snippets"
      body: "*"
    };
  }

  rpc GetSnippet(GetSnippetRequest) returns (GetSnippetResponse) {
    option (google.api.http) = {
      get: "/api/v1/snippets/{id}"
    };
  }

  rpc ListMySnippets(ListMySnippetsRequest) returns (ListMySnippetsResponse) {
    option (google.api.http) = {
      get: "/api/v1/me/snippets"
    };
  }

  rpc ListPublicSnippets(ListPublicSnippetsRequest) returns (ListPublicSnippetsResponse) {
    option (google.api.http) = {
      get: "/api/v1/snippets"
    };
  }

  rpc UpdateSnippet(UpdateSnippetRequest) returns (UpdateSnippetResponse) {
    option (google.api.http) = {
      patch: "/api/v1/snippets/{id}"
      body: "*"
    };
  }

  rpc DeleteSnippet(DeleteSnippetRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/v1/snippets/{id}"
    };  
  }
}

message Snippet {
  string id = 1;
  string user_id = 2;
  string title = 3;
  string content = 4;
  string language_hint = 5;
  bool is_public = 6;
  repeated string tags = 7;
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
}

message PaginationResponse {
  int32 size = 1;
  int32 total_items = 2;
  int32 current_page = 3;
  int32 total_pages = 4;
}

message CreateSnippetRequest {
  string title = 1;
  string content = 2;
  optional string language_hint = 3;
  optional bool is_public = 4;
  repeated string tags = 5;
}

message CreateSnippetResponse {
  string id = 1;
}

message GetSnippetRequest {
  string id = 1;
}

message GetSnippetResponse {
  Snippet snippet = 1;
}

message ListMySnippetsRequest {
  optional int32 page = 1;
  optional int32 size = 2;
}

message ListMySnippetsResponse {
  repeated Snippet snippets = 1;
  PaginationResponse pagination = 2;
}

message ListPublicSnippetsRequest {
  optional int32 page = 1;
  optional int32 size = 2;
  optional string owner_id = 3;
}

message ListPublicSnippetsResponse {
  repeated Snippet snippets = 1;
  PaginationResponse pagination = 2;
}

message UpdateSnippetRequest {
  string id = 1;
  optional string title = 2;
  optional string content = 3;
  optional string language_hint = 4;
  optional bool is_public = 5;
  repeated string tags = 6;
}

message UpdateSnippetResponse {
  Snippet snippet = 1;
}

message DeleteSnippetRequest {
  string id = 1;
}